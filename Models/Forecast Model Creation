

Forecast ModelWithHighCorrelatingIndicators

Shorten ModelWithHighCorrelatingIndicators by one year in order to be able to produce a forecast for 2013. 

ModelWithHighCorrelatingIndicators_2012 <- tslm(TotalEtelAsIs_2012 ~ trend + season + CEPI_2012 + SIExtern_2012 + UrbanoExports_2012 + GlobalisationPartyMembers_2012 + AEPI_2012)
summary(ModelWithHighCorrelatingIndicators_2012) 

Add "newdata" to the 2013 indicator values for the forecast 

ModelWithHighCorrelatingIndicators_Forecast <- forecast(ModelWithHighCorrelatingIndicators_2012,newdata=data.frame(CEPI_2012=CEPI_2013, SIExtern_2012=SIExtern_2013, UrbanoExports_2012= UrbanoExports_2013, GlobalisationPartyMembers_2012=GlobalisationPartyMembers_2013, AEPI_2012=AEPI_2013),h=12)
plot(ModelWithHighCorrelatingIndicators_Forecast, main="ModelWithHighCorrelatingIndicators_Forecast")
ModelWithHighCorrelatingIndicators_Forecast

In order to be able to correlate the Forecast with the As Is Data, it is necessary to convert the Point Estimator into a time series. 

ModelWithHighCorrelatingIndicators_Forecast_df <-as.data.frame(ModelWithHighCorrelatingIndicators_Forecast) 
ModelWithHighCorrelatingIndicators_PointForecast <- ts(ModelWithHighCorrelatingIndicators_Forecast_df$"Point Forecast", start=c(2013,1), end=c(2013,12), frequency=12)

Correlation of the forecasts and As Is Data. As a comparison, the correlation of the As Is Data for 2013 with the Plan Data. 

cor(ModelWithHighCorrelatingIndicators_PointForecast, TotalEtelAsIs_2013) 
cor(TotalEtelAsIs_2013, TotalEtelPlan_2013)

A Comparison with linear regression also supports the result.

ModelWithHighCorrelatingIndicators_forecast_lm <- lm(TotalEtelAsIs_2013 ~ ModelWithHighCorrelatingIndicators_PointForecast, data = TotalEtelAsIs_2013)
TotalAsIs_2013_lm <- lm(TotalEtelAsIs_2013 ~ TotalETelPlan_2013, data = TotalEtelAsIs_2013)
summary(ModelWithHighCorrelatingIndicators_forecast_lm)
summary(TotalEtelAsIs_2013_lm)


Forecast ModelWithLowCorrelatingIndicators                           


Shorten ModelWithLowCorrelatingIndicators by one year in order to be able to produce a forecast for 2013.

ModelWithLowCorrelatingIndicators_2012 <- tslm(TotalEtelAsIs_2012 ~ trend + season + NationalHolidays_2012 + UrbanoExports_2012 + GlobalisationPartyMembers_2012)
summary(ModelWithLowCorrelatingIndicators_2012) 

Add "newdata" to the 2013 indicator values for the forecast 

ModelWithLowCorrelatingIndicators_Forecast <- forecast(ModelWithLowCorrelatingIndicators_2012,newdata=data.frame(NationalHolidays_2012=NationalHolidays_2013, UrbanoExports_2012= UrbanoExports_2013, GlobalisationPartyMembers_2012=GlobalisationPartyMembers_2013),h=12)
plot(ModelWithLowCorrelatingIndicators_Forecast, main="ModelWithLowCorrelatingIndicators_Forecast")
ModelWithLowCorrelatingIndicators_Forecast

In order to be able to correlate the Forecast with the As Is Data, it is necessary to convert the Point Estimator into a time series.

ModelWithLowCorrelatingIndicators_Forecast_df <-as.data.frame(ModelWithLowCorrelatingIndicators_Forecast) 
ModelWithLowCorrelatingIndicators_PointForecast <- ts(ModelWithLowCorrelatingIndicators_Forecast_df$"Point Forecast", start=c(2013,1), end=c(2013,12), frequency=12)

Correlation of the forecasts and As Is Data. As a comparison, the correlation of the As Is Data for 2013 with the Plan Data. 

cor(ModelWithLowCorrelatingIndicators_PointForecast, TotalEtelAsIs_2013) 
cor(TotalEtelAsIs_2013, TotalEtelPlan_2013)

A Comparison with linear regression also supports the result.

ModelWithLowCorrelatingIndicators_forecast_lm <- lm(TotalEtelAsIs_2013 ~ ModelWithLowCorrelatingIndicators_PointForecast, data = TotalEtelAsIs_2013)
TotalAsIs_2013_lm <- lm(TotalEtelAsIs_2013 ~ TotalEtelPlan_2013, data = TotalEtelAsIs_2013)
summary(ModelWithLowCorrelatingIndicators_forecast_lm)
summary(TotalEtelAsIs_2013_lm)



Forecast ModelWithTrendAndSeasonalityOnly                              


Shorten ModelWithTrendAndSeasonalityOnly by one year in order to be able to produce a forecast for 2013.

ModelWithTrendAndSeasonalityOnly_2012 <- tslm(TotalEtelAsIs_2012 ~ trend + season)
summary(ModelWithTrendAndSeasonalityOnly_2012) 

Add "newdata" to the 2013 indicator values for the forecast.

ModelWithTrendAndSeasonalityOnly_Forecast <- forecast(ModelWithTrendAndSeasonalityOnly_2012,h=12)
plot(ModelWithTrendAndSeasonalityOnly_Forecast, main="ModelWithTrendAndSeasonalityOnly_Forecast")
ModelWithTrendAndSeasonalityOnly_Forecast

In order to be able to correlate the Forecast with the As Is Data, it is necessary to convert the Point Estimator into a time series. 

ModelWithTrendAndSeasonalityOnly_Forecast_df <-as.data.frame(ModelWithTrendAndSeasonalityOnly_Forecast) 
ModelWithTrendAndSeasonalityOnly_PointForecast <- ts(ModelWithTrendAndSeasonalityOnly_Forecast_df$"Point Forecast", start=c(2013,1), end=c(2013,12), frequency=12)

Correlation of the forecasts and As Is Data. As a comparison, the correlation of the As Is Data for 2013 with the Plan Data.

cor(ModelWithTrendAndSeasonalityOnly_PointForecast, TotalEtelAsIs_2013) 
cor(TotalEtelAsIs_2013, TotalEtelPlan_2013)

A Comparison with linear regression also supports the result.

ModelWithTrendAndSeasonalityOnly_Forecast_lm <- lm(TotalAsIs_2013 ~ ModelWithTrendAndSeasonalityOnly_PointForecast, data = TotalAsIs_2013)
TotalAsIs_2013_lm <- lm(TotalEtelAsIs_2013 ~ TotalEtelPlan_2013, data = TotalEtelAsIs_2013)
summary(ModelWithTrendAndSeasonalityOnly_Forecast_lm)
summary(TotalEtelAsIs_2013_lm)




Forecast ModelTotalEtel                                                 


Shorten the variables in ModelTotalEtel by one year in order to be able to produce a forecast for 2013.

ModelTotalEtel_2012 <- tslm(TotalEtelAsIs_2012 ~ trend + season)
ModelBlueEtel_2012 <- tslm(BlueEtelAsIs_2012 ~ trend + season)
ModelRedEtel_2012 <- tslm(RedEtelAsIs_2012 ~ trend + season)
summary(ModelTotalEtel_2012) 
summary(ModelBlueEtel_2012) 
summary(ModelRedEtel_2012) 

Forecast
ModelTotalEtel_Forecast <- forecast(ModelTotalEtel_2012,h=12)
ModelBlueEtel_Forecast <- forecast(ModelBlueEtel_2012,h=12)
ModelRedEtel_Forecast <- forecast(ModelRedEtel_2012,h=12)

In order to be able to correlate the Forecast with the As Is Data, it is necessary to convert the Point Estimator into a time series.

ModelTotalEtel_Forecast_df <-as.data.frame(ModelTotalEtel_Forecast) 
ModelBlueEtel_Forecast_df <-as.data.frame(ModelBlueEtel_Forecast) 
ModelRedEtel_Forecast_df <-as.data.frame(ModelRedEtel_Forecast) 
ModelTotalEtel_PointForecast <- ts(ModelTotalEtel_Forecast_df$"Point Forecast", start=c(2013,1), end=c(2013,12), frequency=12)
ModelBlueEtel_PointForecast <- ts(ModelBlueEtel_Forecast_df$"Point Forecast", start=c(2013,1), end=c(2013,12), frequency=12)
ModelRedEtel_PointForecast <- ts(ModelRedEtel_Forecast_df$"Point Forecast", start=c(2013,1), end=c(2013,12), frequency=12)

Correlation of the forecasts and As Is Data. As a comparison, the correlation of the As Is Data for 2013 with the Plan Data.

cor(ModelTotalEtel_PointForecast, TotalEtelAsIs_2013) 
cor(TotalEtelPlan_2013, TotalEtelAsIs_2013)
cor(ModelBlueEtel_PointForecast, BlueEtelAsIs_2013) 
cor(BlueEtelPlan_2013, BlueEtelAsIs_2013)
cor(ModelRedEtel_PointForecast, RedEtelAsIs_2013) 
cor(RedEtelPlan_2013, RedEtelAsIs_2013)


Forecast ModelWithTotalUrbanoExports                                   


Shorten the variables in ModelWithTotalUrbanoExports by one year in order to be able to produce a forecast for 2013.
ModelWithTotalUrbanoExports_2012 <- tslm(TotalEtelAsIs_2012 ~ trend + season + UrbanoExports_2012)
summary(ModelWithTotalUrbanoExports_2012) 

Add "newdata" to the 2013 indicator values for the forecast.

ModelWithTotalUrbanoExports_Forecast <- forecast(ModelWithTotalUrbanoExports_2012, newdata=data.frame(UrbanoExports_2012=UrbanoExports_2013), h=12)
plot(ModelWithTotalUrbanoExports_Forecast,main="ModelWithTotalUrbanoExports_Forecast")
ModelWithTotalUrbanoExports_Forecast
plot(ModelTotalEtel_Forecast,main="ModelTotalEtel_Forecast")
plot(ModelBlueEtel_Forecast,main="ModelBlueEtel_Forecast")
plot(ModelRedEtel_Forecast,main="ModelRedEtel_Forecast")
ModelTotalEtel_Forecast
ModelBlueEtel_Forecast
ModelRedEtel_Forecast


In order to be able to correlate the Forecast with the As Is data, it is necessary to convert the Point Estimator into a time series. 

ModelWithTotalUrbanoExports_Forecast_df <-as.data.frame(ModelWithTotalUrbanoExports_Forecast) 
ModelWithTotalUrbanoExports_PointForecast <- ts(ModelWithTotalUrbanoExports_Forecast_df$"Point Forecast", start=c(2013,1), end=c(2013,12), frequency=12)

Correlation of the forecasts and As Is Data. As a comparison, the correlation of the As Is Data for 2013 with the Plan Data.

cor(ModelWithTotalUrbanoExports_PointForecast, TotalEtelAsIs_2013) 
cor(TotalEtelAsIs_2013, TotalEtelPlan_2013)


Forecast ModelWithNationalHolidays                                      


Shorten the variables in ModelWithNationalHolidays by one year in order to be able to produce a forecast for 2013.

ModelWithNationalHolidays_2012 <- tslm(TotalEtelAsIs_2012 ~ trend + season + NationalHolidays_2012)
summary(ModelWithNationalHolidays_2012) 

Add "newdata" to the 2013 indicator values for the forecast.

ModelWithNationalHolidays_Forecast <- forecast(ModelWithNationalHolidays_2012, newdata=data.frame(NationalHolidays_2012=NationalHolidays_2013), h=12)
plot(ModelWithNationalHolidays_Forecast,main="ModelWithNationalHolidays_Forecast")
ModelWithNationalHolidays_Forecast



In order to be able to correlate the Forecast with the As Is data, it is necessary to convert the Point Estimator into a time series.

ModelWithNationalHolidays_Forecast_df <-as.data.frame(ModelWithNationalHolidays_Forecast) 
ModelWithNationalHolidays_PointForecast <- ts(ModelWithNationalHolidays_Forecast_df$"Point Forecast", start=c(2013,1), end=c(2013,12), frequency=12)

Correlation of the forecasts and As Is Data. As a comparison, the correlation of the As Is data for 2013 with the Plan Data.
cor(ModelWithNationalHolidays_PointForecast, TotalEtelAsIs_2013) 


Forecast ModelWithInfluenceNationalHolidays                             


Shorten the variables in ModelWithInfluenceNationalHolidays by one year in order to be able to produce a forecast for 2013.

ModelWithInfluenceNationalHolidays_2012 <- tslm(TotalEtelAsIs_2012 ~ trend + season + InfluenceNationalHolidays_2012)
summary(ModelWithInfluenceNationalHolidays_2012) 

Add "newdata" to the 2013 indicator values for the forecast.

ModelWithInfluenceNationalHolidays_Forecast <- forecast(ModelWithInfluenceNationalHolidays_2012, newdata=data.frame(InfluenceNationalHolidays_2012=InfluenceNationalHolidaysVector_2013), h=12)
plot(ModelWithInfluenceNationalHolidays_Forecast,main="ModelWithInfluenceNationalHolidays_Forecast")
ModelWithInfluenceNationalHolidays_Forecast


In order to be able to correlate the Forecast with the As Is Data, it is necessary to convert the Point Estimator into a time series.

ModelWithInfluenceNationalHolidays_Forecast_df <-as.data.frame(ModelWithInfluenceNationalHolidays_Forecast) 
ModelWithInfluenceNationalHolidays_PointForecast <- ts(ModelWithInfluenceNationalHolidays_Forecast_df$"Point Forecast", start=c(2013,1), end=c(2013,12), frequency=12)

Correlation of the forecasts and As Is Data. As a comparison, the correlation of the As Is Data for 2013 with the Plan Data.
cor(ModelWithInfluenceNationalHolidays_PointForecast, TotalEtelAsIs_2013) 
cor(TotalEtelAsIs_2013, TotalEtelPlan_2013)

cor(TotalEtelAsIs_2013, TotalEtelPlan_2013)


Forecast for 2014                                                   
 
As ModelWithLowCorrelatingIndicators was the one of best fitting model for a forecast, the exports data for 2014 will be forecast based on trend and seasonality and NationalHolidays, UrbanoExports and GlobalisationPartyMembers. 

summary(ModelWithLowCorrelatingIndicators) 
Forecast_ModelWithLowCorrelatingIndicators_2014 <- forecast(ModelWithLowCorrelatingIndicators,newdata=data.frame(NationalHolidays=NationalHolidays_2014, UrbanoExports= UrbanoExports_2014, GlobalisationPartyMembers=GlobalisationPartyMembers_2014),h=12)
plot(Forecast_ModelWithLowCorrelatingIndicators_2014, main="Forecast_2014")


Forecast_ModelWithLowCorrelatingIndicators_2014_df <-as.data.frame(Forecast_ModelWithLowCorrelatingIndicators_2014) 
PointForecast_ModelWithLowCorrelatingIndicators_2014 <- ts(Forecast_ModelWithLowCorrelatingIndicators_2014_df$"Point Forecast", start=c(2014,1), end=c(2014,12), frequency=12)
PointForecast_ModelWithLowCorrelatingIndicators_2014

cor(TotalEtelAsIs_2014,TotalEtelPlan_2014)
cor(TotalEtelAsIs_2014,PointForecast_ModelWithLowCorrelatingIndicators_2014)


As ModelWithTrendAndSeasonalityOnly also gave a well fitting model for a forecast, the exports data for 2014 will be forecast based on trend and seasonality. 

summary(ModelWithTrendAndSeasonalityOnly) 
Forecast_2014 <- forecast(ModelWithTrendAndSeasonalityOnly,h=12)
plot(Forecast_2014, main="Forecast_2014")


Forecast_2014_df <-as.data.frame(Forecast_2014) 
PointForecast_TrendAndSeasonality_2014 <- ts(Forecast_2014_df$"Point Forecast", start=c(2014,1), end=c(2014,12), frequency=12)
PointForecast_TrendAndSeasonality_2014

cor(TotalEtelAsIs_2014,TotalEtelPlan_2014)
cor(TotalEtelAsIs_2014,PointForecast_TrendAndSeasonality_2014)


### ALTERNATIVE###
As the indiators NationalHolidays delievered a good result, but could not convince in the 2013 forecast, it could be possible that the data for 2013 was to blame. Therefore there is another Forecast using the ModelWithNationalHolidays

summary(ModelWithNationalHolidays)
Forecast_2014_alternative <- forecast(ModelWithNationalHolidays, newdata=data.frame(NationalHolidays=NationalHolidays_2014),h=12)
plot(Forecast_2014_alternative,main="Forecast_2014_alternative")


Forecast_2014_alternative_df <-as.data.frame(Forecast_2014_alternative) 
PointForecast_2014_alternative <- ts(Forecast_2014_alternative_df$"Point Forecast", start=c(2014,1), end=c(2014,12), frequency=12)
PointForecast_2014_alternative

